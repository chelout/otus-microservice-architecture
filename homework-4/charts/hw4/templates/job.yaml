{{- $prefix := include "hw4.fullname" . -}}
{{- $postgresql := printf "%s-%s" $prefix "postgresql" -}}
{{- $port := .Values.postgresql.containerPorts.postgresql | toString -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "hw4.fullname" . }}-migration
  labels:
    {{- include "hw4.labels" . | nindent 4 }}
spec:
  backoffLimit: 4
  template:
    metadata:
      labels:
        {{- include "hw4.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: check-db-ready
          image: postgres:latest
          command:
            - sh
            - "-c"
            - |
              until pg_isready -h {{ $postgresql }} -p 5432;
              do echo waiting for database; sleep 2; done;
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/migrate"]
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.password }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: POSTGRES_HOST
              value: {{ .Values.postgresql.nameOverride }}
            - name: DB_DSN
              value: {{ printf "postgresql://%s:%s@%s:%s/%s?sslmode=disable"
                          .Values.postgresql.auth.username
                          .Values.postgresql.auth.password
                          $postgresql
                          $port
                          .Values.postgresql.auth.database | quote }}
            - name: MIGRATIONS_SOURCE
              value: "/deployments/db/migrations"
      restartPolicy: {{ .Values.job.restartPolicy }}